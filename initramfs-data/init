#!/bin/busybox sh

root_mount="/mnt/root"

# installs symlinks for all busybox provided binaries
/bin/busybox --install -s

# provides a busybox shell if this script fails
rescue_shell() {
	echo "Error: $@"
	echo "Dropping to recovery shell."
	exec /bin/sh
}

# tries to use mdev to populate /dev, falling back on devtmpfs
# because mdev is suitable for loading firmware (devtmpfs isn't)
mount_dev() {
	if [ -x /sbin/mdev ]; then
		echo /sbin/mdev > /proc/sys/kernel/hotplug
		mount -t tmpfs none /dev
		# if this works we're done, otherwise fall through
		/sbin/mdev -s && return 0
	fi
	mount -t devtmpfs none /dev
}

# mounts things this file needs
set_mounts() {
	# proc and sys
	mount -t sysfs none /sys && mount -t proc none /proc && mount_dev
}
# moves the mount or unmounts it if it failed to move it
move_mount() {
	mount --move "$@" "$root_mount/$@" || umount "$@" && return 1
}
# unmounts everything this file mounted
relocate_mounts() {
	ret=0
	move_mount /sys || ret=1
	move_mount /proc || ret=1
	move_mount /dev || ret=1
	return $ret
}

# processes the command line to handle mounting based upon UUID
uuidlabel_root() {
	mount_ret=1
	rescue_present=0
	for cmd in $(cat /proc/cmdline); do
		case "$cmd" in
			rescue)
				# mark the rescue flag
				rescue_present=1
				;;
			root=*)
				# only mount once
				if [ "$mount_ret" -ne 0 ]; then
					dev="${cmd#root=}"
					type="${dev%%=*}"
					# if it's a label or uuid, look it up and update dev
					if [ "$type" = "LABEL" ] || [ "$type" = "UUID" ] ; then
						dev="$(findfs "$dev")"
					fi
					# try to mount it, if successful, set mount_ret to success
					mount -o ro "$dev" "$root_mount" && mount_ret=0
				fi
			;;
		esac
	done
	# We drop to the shell last so we can see if the mount was successful or not
	if [ "$rescue_present" -eq 1 ]; then
		rescue_shell "'rescue' present on command line."
	fi
	# Indicate success
	return $mount_ret
}



# mount what we need
set_mounts || rescue_shell "Couldn't mount one or more of {proc,sys,dev}"

# try to mount the root filesystem
uuidlabel_root || rescue_shell "Couldn't mount root filesystem; UUID may be invalid or you may be missing your hard-disk controller's drivers."

# move dev, proc, and sys over to the new root filesystem
relocate_mounts

# boot the real thing.
exec switch_root "$root_mount" /sbin/init

# vi:set ft=sh:
